name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches-ignore: [ main ]

env:
  AWS_REGION: ap-northeast-1
  AWS_ACCOUNT_ID: "569476542657"

permissions:
  contents: read
  pull-requests: write
  id-token: write  # Required for OIDC (if needed for Docker build test)

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl default-mysql-client libjemalloc2 libvips
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Prepare test database
        env:
          RAILS_ENV: test
          DATABASE_URL: mysql2://127.0.0.1:3306
        run: bin/rails db:prepare
      - name: Run RSpec tests
        env:
          RAILS_ENV: test
          DATABASE_URL: mysql2://127.0.0.1:3306
        run: bundle exec rspec

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Run security scan with Brakeman
        run: bundle exec brakeman --exit-on-warn --format github

  docker-build-test:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Docker image (validation only)
      run: |
        docker build -t rails-app:test .
        echo "✅ Docker image builds successfully!"
        
    - name: Comment PR with build status
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ **CI Passed!** \n\n- Linting: ✅\n- Tests: ✅\n- Security scan: ✅\n- Docker build: ✅\n\nReady for review and merge!'
          })
